apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-prometheus-config
  labels:
    app: {{ .Release.Name }}-prometheus-config
{{ include "aci-monitoring-stack.labels" $ | indent 4 }}
data:
  prometheus.yml: |-
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
      - /etc/alerts.d/prometheus-alerts.yaml
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
      {{- if $.Values.aci_exporter.aciServiceDiscoveryURLs }}
      {{- range $k, $v := $.Values.aci_exporter.aciServiceDiscoveryURLs }}
      - job_name: {{ $k }}-aci-exporter-apics
        scrape_interval: {{ $v.apic_polling }}
        scrape_timeout: {{ $v.apic_scrape_timeout }}
        metrics_path: /probe
        params:
            # List of the queries to execute on the fabric level. They need to match the aci-exporter config
            # DO NOT INSERT SPACES and use \ for next line or aci-exporter will not be able to parse the queries
          queries:
            - "health,fabric_node_info,max_capacity,max_global_pctags,subnets,epg_to_bd,svc_epg_to_bd,inb_epg_to_bd,bd_to_vrf,\
              vlans,static_binding_info,node_count,object_count,fault_insts,\
              ps_power_usage,apic_hw_sensors,controller_topsystem"
        scheme: http
        http_sd_configs:
          - url: {{ $v.url }}.{{ $.Release.Namespace }}.svc:{{ $.Values.aci_exporter.port }}/sd
            refresh_interval: 5m
        relabel_configs:
          - source_labels: [ __meta_role ]
            # This config executes the queries at the "fabric" level and is used to probe any of the APICs 
            # to get metrics about all the devices in the fabric. A classic use case is to get for example the vlan pools
            # the status of the nodes or the scale profile for the whole fabric etc... 
            regex: "aci_exporter_fabric"
            action: "keep"
          - source_labels: [ __address__ ]
            target_label: __param_target
          - source_labels: [ __param_target ]
            target_label: instance
          - source_labels: [ __meta_url ] 
            regex: https?://(.*)/.*
            replacement: "$1"
            target_label: __address__
      - job_name: {{ $k }}-aci-exporter-switches
        scrape_interval: {{ $v.switch_polling }}
        scrape_timeout: {{ $v.switch_scrape_timeout }}
        metrics_path: /probe
        params:
            # List of the queries to execute on the fabric level. They need to match the aci-exporter config
            # DO NOT INSERT SPACES and use \ for next line or aci-exporter will not be able to parse the queries
          queries:
            - "node_topsystem,node_bgp_peers,node_bgp_peers_af,node_interface_info,\
              node_interface_rx_stats,node_interface_rx_err_stats,epg_infos,epg_port_vxlan_binding,\
              node_interface_tx_stats,node_interface_tx_err_stats,node_cpu,node_memory,\
              node_scale_profiles,node_active_scale_profile,node_tcam_current,\
              node_labels_current,node_mac_current,node_ipv4_current,\
              node_ipv6_current,node_mcast_current,node_vlan_current,\
              node_lpm_current,node_slash32_current,node_slash128_current,\
              node_scale_ctx,node_ospf_neighbors,node_fru_power_usage,node_temperature"
        scheme: http
        http_sd_configs:
          - url: {{ $v.url }}.{{ $.Release.Namespace }}.svc:{{ $.Values.aci_exporter.port }}/sd
            refresh_interval: 5m
        relabel_configs:
          - source_labels: [ __meta_role ]
            # Include Only the Switches, this is used to execute the queries on all the switches in the fabric
            # but not on the APIC, for example the APIC have no TCAM so we need to exclude them.
            regex: "(spine|leaf)"
            action: "keep"

          # Get the target (Fabric Name) param from __address__ that is <fabric>#<oobMgmtAddr> by default
          - source_labels: [ __address__ ]
            separator: "#"
            regex: (.*)#(.*)
            replacement: "$1"
            target_label: __param_target
          
          # Get the node Address param from __address__ that is <fabric>#<oobMgmtAddr> by default
          - source_labels: [ __address__ ]
            separator: "#"
            regex: (.*)#(.*)
            replacement: "$2"
            target_label: __param_node
          # Get the aci-exporter URL from the service discovery URL
          - source_labels: [ __meta_url ]
            regex: https?://(.*)/.*
            replacement: "$1"
            target_label: __address__

          # Set instance to the ip/hostname from the __param_node
          - source_labels: [ __param_node ]
            target_label: instance

          # Add labels from discovery
          - source_labels: [ __meta_fabricDomain ]
            target_label: aci
          - source_labels: [ __meta_id ]
            target_label: nodeid
          - source_labels: [ __meta_podId ]
            target_label: podid
          - source_labels: [ __meta_role ]
            target_label: role
          - source_labels: [ __meta_name ]
            target_label: name   
      {{- end }}
      {{- end }}
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: aci-mon-stack
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
          regex: aci-mon-stack
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: "9093"
          action: keep